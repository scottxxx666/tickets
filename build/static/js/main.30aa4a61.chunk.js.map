{"version":3,"sources":["components/common/MultiLine.js","components/auth/AuthContext.js","components/common/ConfirmAlert.js","utils/object.js","components/ticket/TicketTable.js","components/ticket/TicketList.js","components/common/TextInputRow.js","components/common/Alert.js","components/ticket/TicketForm.js","components/ticket/TicketEdit.js","components/ticket/TicketCreate.js","components/auth/Login.js","components/auth/AuthContextProvider.js","components/account/AccountMenu.js","components/common/LoginLink.js","components/account/AccountCircle.js","components/layout/AppTopBar.js","components/layout/ScrollTop.js","components/common/PrivateRoute.js","components/ApolloProvider.js","components/ticket/TicketUpdate.js","components/App.js","index.js"],"names":["React","memo","data","style","whiteSpace","undefined","open","handleClose","desc","handleConfirm","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","removePrivateFields","object","Object","keys","filter","key","startsWith","reduce","result","k","TicketTable","_tableIcons","Filter","forwardRef","props","ref","ResetSearch","Search","SortArrow","_titles","title","field","defaultSort","render","Date","parseInt","updatedAt","toLocaleString","lookup","WAITING","DONE","defaultFilter","payment","MultiLine","note","contactInformation","map","e","platform","platformId","state","ticket","getActions","auth","isLogin","rowData","icon","tooltip","setState","hidden","canDoRowAction","status","event","history","push","endTicket","updateTicket","variables","eventId","closeConfirm","getUser","postedBy","Fragment","icons","this","columns","tickets","options","filtering","toolbar","paging","localization","header","actions","body","emptyDataSourceMessage","context","ConfirmAlert","Component","contextType","AuthContext","useStyles","makeStyles","theme","padding","spacing","UPDATE_TICKET","gql","classes","match","useRouteMatch","useParams","useMutation","onCompleted","onError","console","error","useHistory","price","number","seat","area","Container","Grid","className","container","direction","justify","item","xs","to","url","variant","TextField","margin","getPlatformId","contact","find","handleChange","handleContactChange","submit","form","minWidth","useState","showError","setShowError","useEffect","Alert","Card","CardContent","Typography","component","TextInputRow","name","label","placeholder","onChange","defaultValue","required","type","inputProps","min","helperText","multiline","data-platform","CardActions","defaultTicket","default","setTicket","setContactInformation","TicketForm","target","value","prev","dataset","saveTicket","CREATE_TICKET","TicketEdit","LOGIN_MUTATION","location","useLocation","useContext","update","login","from","pathname","replace","redirect","alignItems","onSuccess","token","tokenId","onFailure","clientId","process","Cookies","get","JSON","parse","getAuth","setAuth","Provider","set","sameSite","expires","logout","remove","user","getToken","AccountMenu","setOpen","anchorRef","useRef","edge","endIcon","Popper","anchorEl","current","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","MenuItem","LoginLink","IconButton","fontSize","grow","flexGrow","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","in","AppTopBar","AppBar","position","Toolbar","AccountCircle","handleClick","document","querySelector","scrollIntoView","behavior","root","bottom","right","disableHysteresis","Zoom","role","Fab","size","aria-label","rest","client","ApolloClient","uri","headers","Authorization","GET_TICKET","ticketId","useQuery","fetchPolicy","loading","dotenv","config","AuthContextProvider","ApolloProvider","path","Login","PrivateRoute","TicketCreate","TicketUpdate","TicketList","ScrollTop","ReactDOM","App","getElementById"],"mappings":"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","file":"static/js/main.30aa4a61.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.memo(({ data }) => {\n  return (\n    <p style={{ whiteSpace: \"break-spaces\" }}>{data}</p>\n  );\n});\n","import * as React from 'react';\n\nexport default React.createContext(undefined);\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\n\nexport default ({ open, handleClose, desc, handleConfirm }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n    >\n      <DialogTitle id=\"alert-dialog-title\">注意</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {desc}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          取消\n        </Button>\n        <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n          確定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","export const removePrivateFields = (object) => Object.keys(object)\n  .filter(key => !key.startsWith('_'))\n  .reduce((result, k) => {\n    result[k] = object[k];\n    return result;\n  }, {});\n","import React, {forwardRef} from 'react';\nimport MaterialTable from 'material-table';\n\nimport ArrowDownward from '@material-ui/icons/ArrowDownwardRounded';\nimport Clear from '@material-ui/icons/ClearRounded';\nimport Search from '@material-ui/icons/SearchRounded';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport Edit from '@material-ui/icons/Edit';\nimport DoneRounded from '@material-ui/icons/DoneRounded';\nimport MultiLine from '../common/MultiLine';\nimport AuthContext from '../auth/AuthContext';\nimport ConfirmAlert from '../common/ConfirmAlert';\nimport {removePrivateFields} from '../../utils/object';\n\nexport default class TicketTable extends React.Component {\n  static contextType = AuthContext;\n  _tableIcons = {\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\n  };\n  _titles = [\n    {\n      title: \"更新時間\",\n      field: \"updatedAt\",\n      defaultSort: \"desc\",\n      render: (data) => (new Date(parseInt(data.updatedAt))).toLocaleString(),\n    }, {\n      title: \"狀態\",\n      field: \"status\",\n      lookup: { WAITING: \"讓票中\", DONE: \"已結束\" },\n      defaultFilter: [\"WAITING\"],\n    }, {\n      title: \"區域\",\n      field: \"area\",\n    }, {\n      title: \"位子\",\n      field: \"seat\",\n    }, {\n      title: \"張數\",\n      field: \"number\",\n    }, {\n      title: \"票價\",\n      field: \"price\",\n    }, {\n      title: \"交易方式\",\n      field: \"payment\",\n      render: ({ payment }) => (<MultiLine data={payment}/>),\n    }, {\n      title: \"備註\",\n      field: \"note\",\n      render: ({ note }) => (<MultiLine data={note}/>),\n    }, {\n      title: \"聯絡方式\",\n      field: \"contactInformation\",\n      render: ({ contactInformation }) => (\n        contactInformation.map(e => <div key={e.platform}>{e.platform} 帳號：{e.platformId}</div>)\n      ),\n    },\n  ];\n  state = {\n    open: false,\n    ticket: null,\n  };\n\n  getActions = (auth) => {\n    return !auth.isLogin() ? [] : [\n      rowData => ({\n        icon: () => <DoneRounded/>,\n        tooltip: '已結束',\n        onClick: () => {\n          this.setState({ open: true, ticket: rowData });\n        },\n        hidden: !this.canDoRowAction(auth, rowData) || rowData.status === 'DONE',\n      }),\n      rowData => ({\n        icon: () => <Edit/>,\n        tooltip: '編輯',\n        onClick: (event, rowData) => this.props.history.push('tickets/' + rowData.id),\n        hidden: !this.canDoRowAction(auth, rowData),\n      }),\n    ];\n  };\n\n  canDoRowAction(auth, rowData) {\n    return auth.getUser().id === rowData.postedBy.id;\n  }\n\n  endTicket = () => {\n    this.props.updateTicket({\n      variables: {\n        ...this.state.ticket,\n        eventId: this.state.ticket.event.id,\n        status: 'DONE',\n        contactInformation: this.state.ticket.contactInformation.map(removePrivateFields),\n      },\n    });\n    this.closeConfirm();\n  };\n\n  closeConfirm = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <MaterialTable\n          icons={this._tableIcons}\n          columns={this._titles}\n          data={this.props.tickets}\n          options={{\n            filtering: true,\n            toolbar: false,\n            paging: false,\n          }}\n          localization={{\n            header: { actions: \"修改\" },\n            body: { emptyDataSourceMessage: \"還沒有資料耶\" },\n          }}\n          actions={this.getActions(this.context)}\n        />\n        <ConfirmAlert\n          open={this.state.open}\n          handleClose={this.closeConfirm}\n          desc={\"確定要將售票狀態改為“已結束”嗎？\"}\n          handleConfirm={this.endTicket}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import TicketTable from './TicketTable';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\nimport {Link, useRouteMatch, useParams, useHistory} from 'react-router-dom';\nimport {gql} from 'apollo-boost';\nimport {useMutation, useQuery} from '@apollo/react-hooks';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    padding: theme.spacing(4),\n  },\n  icon: {\n    padding: theme.spacing(0.3),\n  },\n}));\n\nconst GET_TICKETS = gql`\n    query GetTickets($eventId: ID!) {\n        tickets(eventId: $eventId) {\n            id\n            status\n            area\n            seat\n            number\n            price\n            payment\n            note\n            contactInformation {\n                platform\n                platformId\n            }\n            postedBy {\n                id\n            }\n            event {\n                id\n            }\n            updatedAt\n        }\n    }\n`;\n\nconst UPDATE_TICKET = gql`\n    mutation UpdateTicket(\n        $id:ID!\n        $area: String!\n        $seat: String!\n        $number: Int!\n        $price: Int!\n        $payment: String!\n        $note: String\n        $contactInformation: [ContactInformationInput!]\n        $eventId: ID!\n    ) {\n        updateTicket(\n            id: $id\n            input: {\n                status: DONE\n                area: $area\n                seat: $seat\n                number: $number\n                price: $price\n                payment: $payment\n                note: $note\n                contactInformation: $contactInformation\n                event: {\n                    id: $eventId\n                }\n            }) {\n            id\n        }\n    }\n`;\n\nexport default function () {\n  const classes = useStyles();\n  const match = useRouteMatch();\n  const { eventId } = useParams();\n  // const { data, refetch } = useQuery(GET_TICKETS, {\n  //   variables: { eventId },\n  //   fetchPolicy: 'no-cache',\n  //   pollInterval: 6000,\n  // });\n  const data = {\n    tickets: [\n      {\n        note: '文湖線',\n        payment: '面交',\n        price: 3500,\n        number: 1,\n        seat: '35 排 12 號',\n        status: 'WAITING',\n        area: '1A',\n        contactInformation: [{ platform: 'PTT', platformId: 'aaaaaa' }],\n        updatedAt: '1625985366000',\n      },\n      {\n        note: '',\n        payment: '匯款',\n        price: 5200,\n        number: 2,\n        seat: '1 排 22, 23 號',\n        status: 'WAITING',\n        area: '1A',\n        contactInformation: [{ platform: 'PTT', platformId: 'bbb' }],\n        updatedAt: '1625984336000',\n      },\n      {\n        note: '',\n        payment: '面交',\n        price: 3500,\n        number: 4,\n        seat: '40 排 12 號',\n        status: 'WAITING',\n        area: '3A',\n        contactInformation: [{ platform: 'FACEBOOK', platformId: 'cccc' }],\n        updatedAt: '1625885366000',\n      },\n    ],\n  };\n\n  const [updateTicket] = useMutation(UPDATE_TICKET, {\n    onCompleted: (data) => {\n      // refetch();\n    },\n    onError: (e) => {\n      console.error(e);\n    },\n  });\n  const history = useHistory();\n\n  const { tickets } = data || [];\n  return (\n    <Container>\n      <Grid\n        className={classes.header}\n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n      >\n        <Grid item xs={1}>\n          <Link to={`${match.url}/create`}>\n            <Button variant=\"contained\" color=\"primary\">\n              <AddBoxRoundedIcon className={classes.icon}/> 新增\n            </Button>\n          </Link>\n        </Grid>\n      </Grid>\n      <TicketTable tickets={tickets} updateTicket={updateTicket} history={history}/>\n    </Container>\n  );\n}\n","import Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport * as React from 'react';\n\nexport default (props) => (\n  <Grid item xs={12}>\n    <TextField\n      margin=\"normal\"\n      {...props}\n    />\n  </Grid>\n);\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport React from 'react';\n\nexport default ({ open, handleClose, title = '錯誤', desc }) => {\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {desc}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\n          確定\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport TextInputRow from '../common/TextInputRow';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport {useEffect} from 'react';\nimport {useState} from 'react';\nimport Alert from '../common/Alert';\n\nconst getPlatformId = (contactInformation, platform) => {\n  const contact = contactInformation.find(e => e.platform === platform);\n  return contact ? contact.platformId : null;\n};\n\nexport default function ({ handleChange, handleContactChange, submit, error, ticket, title }) {\n  const useStyles = makeStyles(theme => ({\n    form: {\n      minWidth: 700,\n      padding: theme.spacing(5),\n    },\n  }));\n  const classes = useStyles();\n\n  const [showError, setShowError] = useState(false);\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return (\n    <Grid container justify=\"center\">\n      <Alert open={showError} handleClose={() => setShowError(false)} desc={'抱歉，網路錯誤，麻煩稍後再試。'}\n             handleConfirm={() => setShowError(false)}/>\n      <Card>\n        <form className={classes.form}>\n          <CardContent>\n            <Grid container justify=\"center\">\n              <Typography variant=\"h5\" component=\"h2\">\n                {title}\n              </Typography>\n            </Grid>\n            <TextInputRow\n              id=\"area\"\n              name=\"area\"\n              label=\"票卷區域\"\n              placeholder=\"紅2A區\"\n              onChange={handleChange}\n              defaultValue={ticket.area}\n              required\n            />\n            <TextInputRow\n              id=\"seat\"\n              name=\"seat\"\n              label=\"座位序號\"\n              placeholder=\"10排12號\"\n              onChange={handleChange}\n              defaultValue={ticket.seat}\n              required\n            />\n            <TextInputRow\n              id=\"number\"\n              name=\"number\"\n              label=\"張數\"\n              type=\"number\"\n              inputProps={{ min: 1 }}\n              onChange={handleChange}\n              defaultValue={ticket.number || 1}\n              required\n            />\n            <TextInputRow\n              id=\"price\"\n              name=\"price\"\n              label=\"預售價格\"\n              type=\"number\"\n              helperText=\"注意：售價不得比原票價高！\"\n              inputProps={{ min: 0 }}\n              onChange={handleChange}\n              defaultValue={ticket.price}\n            />\n            <TextInputRow\n              id=\"payment\"\n              name=\"payment\"\n              label=\"交易方式\"\n              multiline\n              onChange={handleChange}\n              defaultValue={ticket.payment}\n            />\n            <TextInputRow\n              id=\"note\"\n              name=\"note\"\n              label=\"備註\"\n              multiline\n              onChange={handleChange}\n              defaultValue={ticket.note}\n            />\n            <TextInputRow\n              id=\"ptt_id\"\n              name=\"ptt_id\"\n              label=\"PTT ID\"\n              inputProps={{ \"data-platform\": \"PTT\" }}\n              onChange={handleContactChange}\n              defaultValue={getPlatformId(ticket.contactInformation, 'PTT')}\n            />\n            <TextInputRow\n              id=\"line_id\"\n              name=\"line_id\"\n              data-platform=\"LINE\"\n              label=\"LINE ID\"\n              inputProps={{ \"data-platform\": \"LINE\" }}\n              onChange={handleContactChange}\n              defaultValue={getPlatformId(ticket.contactInformation, 'LINE')}\n            />\n            <TextInputRow\n              id=\"fb_id\"\n              name=\"fb_id\"\n              label=\"FB 用戶名稱\"\n              data-platform=\"FB\"\n              helperText=\"非中文！可以看個人頁面的網址 facebook.com/ 之後的部分，或是參考 https://www.facebook.com/help/messenger-app/android/1047811435279151\"\n              inputProps={{ \"data-platform\": \"FB\" }}\n              onChange={handleContactChange}\n              defaultValue={getPlatformId(ticket.contactInformation, 'FB')}\n            />\n          </CardContent>\n          <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={submit}>提交</Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Grid>\n  );\n}\n","import React, {useState} from 'react';\nimport TicketForm from './TicketForm';\nimport {removePrivateFields} from '../../utils/object';\n\nexport default function (props) {\n  const defaultTicket = props.default;\n  const [ticket, setTicket] = useState(defaultTicket || {\n    area: null,\n    seat: null,\n    number: 1,\n    price: null,\n    payment: null,\n    note: '',\n    event: { id: props.eventId },\n  });\n  const [contactInformation, setContactInformation] = useState(\n    defaultTicket ?\n      defaultTicket.contactInformation : [\n        { platform: 'PTT', platformId: '' },\n        { platform: 'LINE', platformId: '' },\n      ],\n  );\n\n  function handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    setTicket(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  }\n\n  function handleContactChange(event) {\n    const platform = event.target.dataset.platform;\n    const platformId = event.target.value;\n    setContactInformation(prev => [...prev.filter(e => e.platform !== platform), { platform, platformId }]);\n  }\n\n  function submit() {\n    props.saveTicket({\n      variables: {\n        ...ticket,\n        contactInformation: contactInformation.map(removePrivateFields),\n        number: parseInt(ticket.number, 10),\n        price: parseInt(ticket.price, 10),\n        eventId: ticket.event.id,\n      },\n    });\n  }\n\n  return (\n    <TicketForm\n      {...({\n        ...props,\n        handleChange,\n        handleContactChange,\n        ticket: {\n          ...ticket,\n          contactInformation,\n        },\n        submit,\n      })}\n    />\n  );\n}\n","import * as React from 'react';\nimport {gql} from 'apollo-boost';\nimport {useMutation} from '@apollo/react-hooks';\nimport {useHistory, useParams} from 'react-router-dom';\nimport TicketEdit from './TicketEdit';\n\nconst CREATE_TICKET = gql`\n    mutation CreateTicket(\n        $area: String!\n        $seat: String!\n        $number: Int!\n        $price: Int!\n        $payment: String!\n        $note: String\n        $contactInformation: [ContactInformationInput!]\n        $eventId: ID!\n    ) {\n        createTicket(input: {\n            status: WAITING\n            area: $area\n            seat: $seat\n            number: $number\n            price: $price\n            payment: $payment\n            note: $note\n            contactInformation: $contactInformation\n            event: {\n                id: $eventId\n            }\n        }) {\n            id\n        }\n    }\n`;\n\nexport default function () {\n  const { eventId } = useParams();\n  const history = useHistory();\n  const [saveTicket, { error }] = useMutation(CREATE_TICKET, {\n    onCompleted: (data) => {\n      history.push(`/event/${eventId}/tickets`);\n    },\n    onError: (e) => {\n      console.error(e);\n    },\n  });\n\n  return (\n    <TicketEdit\n      {...({\n        error,\n        title: '新增一筆售票資料',\n        eventId,\n        saveTicket,\n      })}\n    />\n  );\n}\n","import React, {useContext} from 'react';\nimport GoogleLogin from 'react-google-login';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AuthContext from './AuthContext';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {useMutation} from '@apollo/react-hooks';\nimport {gql} from 'apollo-boost';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    padding: theme.spacing(3),\n  },\n}));\n\nconst LOGIN_MUTATION = gql`\n    mutation($token:String!){\n        login(platform:\"GOOGLE\", token:$token){\n            token\n            user{\n                id\n                email\n                name\n            }\n        }\n    }\n`;\n\nexport default () => {\n  const location = useLocation();\n  const history = useHistory();\n  const redirect = () => {\n    const { from } = location.state || { from: { pathname: '/' } };\n    history.replace(from);\n  };\n\n  const auth = useContext(AuthContext);\n  const [login] = useMutation(LOGIN_MUTATION, {\n    onCompleted: (data) => {\n      auth.update(data.login);\n      redirect();\n    },\n  });\n\n  const successHandler = (data) => login({ variables: { token: data.tokenId } });\n  const failureHandler = (e) => {\n    console.error(e);\n  };\n\n  const classes = useStyles();\n  const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Typography className={classes.title} variant=\"h4\"/>\n      <GoogleLogin onSuccess={successHandler} onFailure={failureHandler} clientId={clientId}/>\n    </Grid>\n  );\n}\n","import AuthContext from './AuthContext';\nimport React, {useState} from 'react';\nimport Cookies from 'js-cookie';\n\nfunction getAuth() {\n  const auth = Cookies.get('auth');\n  return auth ? JSON.parse(auth) : undefined;\n}\n\nexport default (props) => {\n  const [auth, setAuth] = useState(getAuth());\n  const update = (data) => {\n    Cookies.set('auth', data, { sameSite: 'lax', expires: 30 });\n    setAuth(data);\n  };\n\n  const logout = () => {\n    Cookies.remove('auth');\n    setAuth(undefined);\n  };\n\n  const isLogin = () => {\n    return auth;\n  };\n\n  const getUser = () => auth ? auth.user : null;\n  const getToken = () => auth ? auth.token : null;\n\n  return (\n    <AuthContext.Provider value={{ data: auth, update, logout, isLogin, getUser, getToken }} {...props}/>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircleRounded';\nimport Popper from '@material-ui/core/Popper';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, {useContext, useState} from 'react';\nimport AuthContext from '../auth/AuthContext';\n\nconst AccountMenu = () => {\n  const [open, setOpen] = useState(false);\n  const toggleMenu = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const anchorRef = React.useRef(null);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const logout = () => {\n    auth.logout();\n  };\n  const auth = useContext(AuthContext);\n\n  return (\n    <React.Fragment>\n      <Button\n        edge=\"end\"\n        variant=\"contained\"\n        color=\"default\"\n        endIcon={<AccountCircleIcon/>}\n        onClick={toggleMenu}\n        ref={anchorRef}\n      >{auth.getUser().name}</Button>\n      <Popper open={open} anchorEl={anchorRef.current} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  <MenuItem onClick={logout}>登出</MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </React.Fragment>\n  );\n};\n\nexport default AccountMenu;\n","import {Link} from 'react-router-dom';\nimport React from 'react';\n\nexport default (props) => {\n  return (\n    <Link\n      to={location => ({ pathname: '/login', state: { from: location } })}\n      {...props}\n    />\n  );\n};\n","import AccountCircleIcon from '@material-ui/icons/AccountCircleRounded';\nimport IconButton from '@material-ui/core/IconButton';\nimport React from 'react';\nimport LoginLink from '../common/LoginLink';\n\nexport default () => {\n  return (\n    <LoginLink>\n      <IconButton>\n        <AccountCircleIcon fontSize=\"large\"/>\n      </IconButton>\n    </LoginLink>\n  );\n};\n","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport React, {Fragment, useContext} from 'react';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport AuthContext from '../auth/AuthContext';\nimport AccountMenu from '../account/AccountMenu';\nimport AccountCircle from '../account/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nfunction HideOnScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nconst AppTopBar = () => {\n  const classes = useStyles();\n  const auth = useContext(AuthContext);\n\n  return (\n    <Fragment>\n      <HideOnScroll>\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <div className={classes.grow}/>\n            {auth.isLogin() ? <AccountMenu/> : <AccountCircle/>}\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <Toolbar id=\"back-to-top-anchor\"/>\n    </Fragment>\n  );\n};\n\nexport default AppTopBar;\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUpRounded';\nimport Zoom from '@material-ui/core/Zoom';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nfunction handleClick() {\n  document.querySelector('#back-to-top-anchor').scrollIntoView({ behavior: 'smooth' });\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(3),\n    right: theme.spacing(4),\n  },\n}));\n\nexport default () => {\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n  });\n  const classes = useStyles();\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon/>\n        </Fab>\n      </div>\n    </Zoom>\n  );\n};\n","import React, {useContext} from 'react';\nimport AuthContext from '../auth/AuthContext';\nimport {Redirect, Route} from 'react-router-dom';\n\nexport default (props) => {\n  const auth = useContext(AuthContext);\n\n  const { children, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth.isLogin() ? (children) : <Redirect to={{ pathname: '/login', state: { from: props.location } }}/>\n      }\n    />\n  );\n}\n\n","import {ApolloProvider} from '@apollo/react-hooks';\nimport React, {useContext} from 'react';\nimport AuthContext from './auth/AuthContext';\nimport ApolloClient from 'apollo-boost';\n\nexport default (props) => {\n  const auth = useContext(AuthContext);\n  const client = new ApolloClient({\n    uri: process.env.REACT_APP_SERVER_URL,\n    headers: {\n      Authorization: auth.isLogin() ? `Bearer ${auth.getToken()}` : '',\n    },\n  });\n\n  return (\n    <ApolloProvider client={client} {...props}/>\n  );\n}\n","import React from 'react';\nimport {gql} from 'apollo-boost';\nimport {useMutation, useQuery} from '@apollo/react-hooks';\nimport {useHistory, useParams} from 'react-router-dom';\nimport TicketEdit from './TicketEdit';\n\nconst GET_TICKET = gql`\n    query GetTicket($id: ID!) {\n        ticket(id: $id) {\n            id\n            status\n            area\n            seat\n            number\n            price\n            payment\n            note\n            contactInformation {\n                platform\n                platformId\n            }\n            postedBy {\n                id\n            }\n            event {\n                id\n            }\n            updatedAt\n        }\n    }\n`;\n\nconst UPDATE_TICKET = gql`\n    mutation UpdateTicket(\n        $id: ID!\n        $area: String!\n        $seat: String!\n        $number: Int!\n        $price: Int!\n        $payment: String!\n        $note: String\n        $contactInformation: [ContactInformationInput!]\n        $eventId: ID!\n    ) {\n        updateTicket(\n            id: $id\n            input: {\n                status: WAITING\n                area: $area\n                seat: $seat\n                number: $number\n                price: $price\n                payment: $payment\n                note: $note\n                contactInformation: $contactInformation\n                event: {\n                    id: $eventId\n                }\n            }) {\n            id\n        }\n    }\n`;\n\nexport default () => {\n  const history = useHistory();\n  const { ticketId, eventId } = useParams();\n\n  const { loading, data } = useQuery(GET_TICKET, {\n    variables: { id: ticketId },\n    fetchPolicy: 'no-cache',\n  });\n  const [saveTicket, { error }] = useMutation(UPDATE_TICKET, {\n    onCompleted: (data) => {\n      history.push(`/event/${eventId}/tickets`);\n    },\n    onError: (e) => {\n      console.error(e);\n    },\n  });\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  const { ticket } = data;\n  return (\n    <TicketEdit {...{\n      error,\n      eventId: ticket.eventId,\n      saveTicket,\n      default: ticket,\n      title: '更新售票資料',\n    }}/>\n  );\n};\n","import React from 'react';\nimport TicketList from './ticket/TicketList';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport TicketCreate from './ticket/TicketCreate';\nimport Login from './auth/Login';\nimport dotenv from 'dotenv';\nimport AuthContextProvider from './auth/AuthContextProvider';\nimport AppTopBar from './layout/AppTopBar';\nimport ScrollTop from './layout/ScrollTop';\nimport PrivateRoute from './common/PrivateRoute';\nimport ApolloProvider from './ApolloProvider';\nimport TicketUpdate from './ticket/TicketUpdate';\n\nexport default () => {\n  dotenv.config();\n\n  return (\n    <AuthContextProvider>\n      <ApolloProvider>\n        <HashRouter>\n          <div className=\"App\">\n            <AppTopBar/>\n            <Switch>\n              <Route path=\"/about\">\n                Hi\n              </Route>\n              <Route path=\"/login\">\n                <Login/>\n              </Route>\n              <PrivateRoute path=\"/event/:eventId/tickets/create\">\n                <TicketCreate/>\n              </PrivateRoute>\n              <PrivateRoute path=\"/event/:eventId/tickets/:ticketId\">\n                <TicketUpdate/>\n              </PrivateRoute>\n              <Route path=\"/event/:eventId/tickets\">\n                <TicketList/>\n              </Route>\n              <Route path=\"/\">\n                index\n              </Route>\n            </Switch>\n          </div>\n          <ScrollTop/>\n        </HashRouter>\n      </ApolloProvider>\n    </AuthContextProvider>\n  );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}